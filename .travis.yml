os: linux
dist: focal
language: python

stages:
  - test
  - name: deploy
    # to only build tags
    #   if: tag IS PRESENT AND repo = pypa/cibuildwheel
    # To only build tags that look like vX.Y.Z:
    #   if: tag =~ ^v\d+\.\d+\.\d+$ AND repo = pypa/cibuildwheel

jobs:
  include:
    # Deploy source distribution
    - stage: deploy
      name: Deploy source distribution
      install: skip
      script: python3 setup.py sdist --formats=gztar
      after_success: |
        python3 -m pip install twine
        python3 -m twine upload --skip-existing dist/*.tar.gz
      
    # Deploy on linux
    - stage: deploy
      name: Build and deploy Linux wheels
      services: docker
      install: python3 -m pip install cibuildwheel==2.0.0a2
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: |
        python3 -m pip install twine
        python3 -m twine upload --skip-existing wheelhouse/*.whl
    
    # Deploy on windows
    - stage: deploy
      name: Build and deploy Windows wheels
      os: windows
      language: shell
      install: python3 -m pip install cibuildwheel==2.0.0a2
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: |
        python3 -m pip install twine
        python3 -m twine upload --skip-existing wheelhouse/*.whl

        

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" = windows ]]; then
        choco upgrade python -y --version 3.8
        export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
        # make sure it's on PATH as 'python3'
        ln -s /c/Python38/python.exe /c/Python38/python3.exe
    fi

install:
  - python3 -m pip install cython

script:
  - python3 setup.py install
  # TODO add automated tests


deploy:
  skip_cleanup: true
  file: wheelhouse/*
  file_glob: true
  skip_existing: true
  provider: pypi
  username: __token__
  password:
    secure: RuXIVqrRY03itAuvIbWKq6VOAqAGKXUYn3dYTIUE8iI+TNAF9qjK1H+8ZXGMyQEiuSRExu9cd7cUA6LXr5iVJBcnRoxfI5gBe3ttE+QpA4T6yXItQuT1Fq1EWy6e+X62jcXYpYmVE2DLKiexAfJTB93ISf+dxf2T8q0sHmDMSevQCBExweo+fgiD6JDIPT4pdNYKpY0v0LOdopohpPxTixlH9vLGoqctA40ddWdUjAP0Ozu2pvCmuwlXpPfmomZt5gjHipwcNJHfPn95BA1frVesleiUkSq0uRtOvi+JaRwb0r3zgEwqleVAoXuzydNxmDh5HaDXkwPbwnmtgZAxO6kH3FKu+810Vt2Vf2W32m/IdwZMIQI8R3OK28KlQ2et4crssqTq25UuCkxxNAqI8C95jg9jHhD4lTu4yp2srsx6Yb/mrDJaWAbimRAyK2sx3dKMPLOX6RtgMtedXKNucSOz1w+uOdI1RAkS4J50jjCJvLIAJ73JDCkhiCamdDqYLmNq+2s9IJiHKliU7adqjUq5pCIwpJ1tIopdeulxSlWmC23t1pPVS5OIN1n3fameXJwc3ZGB1FWd/5X2z1fX+oFXSpROuVHI64o+EPlyCx5SxaBv1b+ztZjnmx0BfyAIh5kINMRtoaiLUtBpNrPR2EEN6gfsjaWWslBQ5zqQEQw=

env:
  global:
    - TWINE_USERNAME=__token__
